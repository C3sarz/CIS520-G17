==============================
	CIS 520 - S21
	   Group 17
==============================

==== Observations ====

possibly relevant functions for priority donation:
(synch)

void lock_acquire (struct lock *);
bool lock_try_acquire (struct lock *);
void lock_release (struct lock *);
bool lock_held_by_current_thread (const struct lock *);

==== Modified files ====

-timer.c:
	-new list sleeping_threads_list
	-modified timer_interrupt() function
	-modified timer_sleep() function
	-smaller sleep time comparator function (smaller_wakeup_tick)


-timer.h:
	-function prototypes

-thread.c
	-finished set_thread_priority to yield if its priority is not greatest
	-highest_priority_first() comparator function
	-thread_yield(): modified it to use the list_insert_ordered() function
	-to do list_ordered orders the ready_list for set_thread_priority

-thread.h:
	-added wake up property
	-original_priority property
	-priority_is_donated property
	-function prototypes

-synch.c:

-synch.h:
